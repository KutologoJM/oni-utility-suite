# Generated by Django 5.2.7 on 2025-10-26 00:11

import django.db.models.deletion
import django_extensions.db.fields
import recipe_api.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SourcesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_name', models.CharField(blank=True, max_length=50, null=True)),
                ('source_wiki_url', models.URLField(blank=True, max_length=100, null=True)),
                ('source_image_url', models.URLField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
            },
        ),
        migrations.CreateModel(
            name='IngredientsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_name', models.CharField(max_length=50)),
                ('ingredient_wiki_url', models.URLField(blank=True, max_length=100)),
                ('ingredient_image_url', models.URLField(blank=True, max_length=100)),
                ('ingredient_description', models.TextField(max_length=200, null=True)),
                ('food_quality', models.JSONField(help_text='{"Quality": "Standard", "Morale impact": "+2"}')),
                ('spoil_time', models.PositiveIntegerField(blank=True, null=True)),
                ('kcal_per_kg', models.PositiveIntegerField(blank=True, null=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='ingredient_name', unique=True)),
                ('creator', models.ForeignKey(default=recipe_api.utils.get_default_manager, on_delete=models.SET(recipe_api.utils.get_fallback_user), related_name='ingredient_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredientsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('main', 'Main'), ('alternate', 'Alternate')], max_length=10, null=True)),
                ('amount_required', models.CharField(max_length=50)),
                ('creator', models.ForeignKey(default=recipe_api.utils.get_default_manager, on_delete=models.SET(recipe_api.utils.get_fallback_user), related_name='recipe_ingredient_owner', to=settings.AUTH_USER_MODEL)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe_api.ingredientsmodel')),
            ],
            options={
                'verbose_name': 'Recipe Ingredient',
                'verbose_name_plural': 'Recipe Ingredients',
            },
        ),
        migrations.CreateModel(
            name='RecipeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(max_length=50)),
                ('recipe_wiki_url', models.URLField(blank=True, max_length=100)),
                ('recipe_image_url', models.URLField(blank=True, max_length=100)),
                ('recipe_description', models.TextField(max_length=200, null=True)),
                ('dlc_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dlc_wiki_url', models.URLField(blank=True, max_length=100, null=True)),
                ('dlc_image_url', models.URLField(blank=True, max_length=100, null=True)),
                ('food_quality', models.JSONField(help_text='{"Quality": "Standard", "Morale impact": "+2"}')),
                ('spoil_time', models.PositiveIntegerField(blank=True, null=True)),
                ('kcal_per_kg', models.PositiveIntegerField(blank=True, null=True)),
                ('kcal_gained', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='recipe_name', unique=True)),
                ('creator', models.ForeignKey(default=recipe_api.utils.get_default_manager, on_delete=models.SET(recipe_api.utils.get_fallback_user), related_name='recipe_owner', to=settings.AUTH_USER_MODEL)),
                ('ingredients', models.ManyToManyField(related_name='ingredients', through='recipe_api.RecipeIngredientsModel', to='recipe_api.ingredientsmodel')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
            },
        ),
        migrations.AddField(
            model_name='recipeingredientsmodel',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe_api.recipemodel'),
        ),
        migrations.CreateModel(
            name='RecipeSourcesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.ForeignKey(default=recipe_api.utils.get_default_manager, on_delete=models.SET(recipe_api.utils.get_fallback_user), related_name='recipe_source_relationship_owner', to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe_api.recipemodel')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe_api.sourcesmodel')),
            ],
            options={
                'verbose_name': 'Recipe Source',
                'verbose_name_plural': 'Recipe Sources',
            },
        ),
        migrations.AddField(
            model_name='recipemodel',
            name='sources',
            field=models.ManyToManyField(related_name='recipe_sources', through='recipe_api.RecipeSourcesModel', to='recipe_api.sourcesmodel'),
        ),
        migrations.CreateModel(
            name='IngredientSourcesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.ForeignKey(default=recipe_api.utils.get_default_manager, on_delete=models.SET(recipe_api.utils.get_fallback_user), related_name='ingredient_source_relationship_owner', to=settings.AUTH_USER_MODEL)),
                ('ingredients', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe_api.ingredientsmodel')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe_api.sourcesmodel')),
            ],
            options={
                'verbose_name': 'Ingredient Source',
                'verbose_name_plural': 'Ingredient Sources',
            },
        ),
        migrations.AddField(
            model_name='ingredientsmodel',
            name='sources',
            field=models.ManyToManyField(related_name='ingredient_sources', through='recipe_api.IngredientSourcesModel', to='recipe_api.sourcesmodel'),
        ),
    ]
